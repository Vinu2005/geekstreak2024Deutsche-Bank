Minimize the Heights II
Difficulty: MediumAccuracy: 15.06%Submissions: 600K+Points: 4
Given an array arr[] denoting heights of N towers and a positive integer K.

For each tower, you must perform exactly one of the following operations exactly once.

Increase the height of the tower by K
Decrease the height of the tower by K
Find out the minimum possible difference between the height of the shortest and tallest towers after you have modified each tower.

You can find a slight modification of the problem here.
Note: It is compulsory to increase or decrease the height by K for each tower. After the operation, the resultant array should not contain any negative integers.

Examples :

Input: k = 2, arr[] = {1, 5, 8, 10}
Output: 5
Explanation: The array can be modified as {1+k, 5-k, 8-k, 10-k} = {3, 3, 6, 8}.The difference between the largest and the smallest is 8-3 = 5.
Input: k = 3, arr[] = {3, 9, 12, 16, 20}
Output: 11
Explanation: The array can be modified as {3+k, 9+k, 12-k, 16-k, 20-k} -> {6, 12, 9, 13, 17}.The difference between the largest and the smallest is 17-6 = 11. 
Expected Time Complexity: O(n*logn)
Expected Auxiliary Space: O(n)

Constraints
1 ≤ k ≤ 10^7
1 ≤ n ≤ 10^5
1 ≤ arr[i] ≤ 10^7

class Solution:
    def getMinDiff(self, arr,k):
        # Get the length of the array
        n = len(arr)
        
        # If there is only one tower, no difference can be minimized, so return 0
        if n == 1:
            return 0
        
        # Sort the array so that we can analyze heights in a structured way
        arr.sort()
        
        # 'a' is initialized as the difference between the largest and smallest tower before any modification
        # 's' is the smallest possible value after increasing the smallest tower by K
        # 'l' is the largest possible value after decreasing the largest tower by K
        a, s, l = arr[-1] - arr[0], arr[0] + k, arr[-1] - k
        
        # Loop through the sorted array, considering each element as a potential point to modify heights
        for i in range(n - 1):
            # Calculate the minimum height by either keeping the smallest so far or decreasing the next tower by K
            m = min(s, arr[i+1] - k)
            # Calculate the maximum height by either keeping the largest so far or increasing the current tower by K
            M = max(l, arr[i] + k)
            
            # If the new minimum value (m) is non-negative, update the minimized difference
            if m >= 0:
                # Update 'a' to be the smallest difference between the maximum (M) and minimum (m)
                a = min(a, M - m)
        
        # Return the minimized difference between the tallest and shortest tower
        return a
        # code here
